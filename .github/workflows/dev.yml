# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cicdsample
          path: build/libs/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cicdsample
      # - name: Setup SSH
      #   uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     host: ${{ secrets.HOSTNAME }}
      #     username: ${{ secrets.SSH_USER }}
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: 22
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: SCP transfer
        run: scp *.jar ${{ secrets.HOSTNAME }}@${{ secrets.SSH_USER }}:~/cicd
      - name: Execute remote commands
        run: |
          ssh ${{ secrets.HOSTNAME }}@${{ secrets.SSH_USER }} "sudo fuser -k 8082/tcp"
          ssh ${{ secrets.HOSTNAME }}@${{ secrets.SSH_USER }} "sudo nohup java -jar ~/cicd/*.jar &"



